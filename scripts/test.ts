import * as multiSendAbi from '../src/abi/multi-send-call-only'

const test =
  '0x8d80ff0a0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000020b00940181a94a35a4569e4529a3cdfb74e38fd9863100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000247872f58f2ff11f9e8f89c1c48e460cff0c6b29000000000000000000000000000000000000000000001a234e91fcd361c6bc0000247872f58f2ff11f9e8f89c1c48e460cff0c6b2900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084859e4b81000000000000000000000000000000000000000000001a234e91fcd361c6bc0000000000000000000000000000000000000000000000000285bbc47936ed000000000000000000000000000000000000000000000000000000000000000007d0000000000000000000000000000000000000000000000000000000000000000100940181a94a35a4569e4529a3cdfb74e38fd9863100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000247872f58f2ff11f9e8f89c1c48e460cff0c6b290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'

console.log(multiSendAbi.functions.multiSend.decode(test))

const getDecodedDataFields = (
  chainId: number,
  to: string,
  data: string,
): { name: string; value: string; inline?: boolean }[] => {
  if (chainId === 8453 && to === '0xa1dabef33b3b82c7814b6d82a79e50f4ac44102b') {
    const decoded = multiSendAbi.functions.multiSend.decode(data)
    // Encoded transactions. Each transaction is encoded as a packed bytes of operation has to be
    //  uint8(0) in this version(=> 1 byte),
    //  to as a address(=> 20 bytes),
    //  value as a uint256(=> 32 bytes),
    //  data length as a uint256(=> 32 bytes),
    //  data as bytes.see abi.encodePacked for more information on packed encoding
    return []
  }
  return []
}
